# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'MarketCollect.ui'
##
## Created by: Qt User Interface Compiler version 6.0.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *
import os


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setWindowModality(Qt.ApplicationModal)
        MainWindow.resize(960, 640)
        application_path = os.path.dirname(__file__)
        uidir = os.path.abspath(os.path.join(application_path, "../."))
        font = QFont()
        font.setBold(False)
        MainWindow.setFont(font)
        icon = QIcon()
        icon.addFile(os.path.join(uidir, u"icons/icon-app.jpg"), QSize(), QIcon.Normal, QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setLayoutDirection(Qt.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        self.actionImport = QAction(MainWindow)
        self.actionImport.setObjectName(u"actionImport")
        icon1 = QIcon()
        icon1.addFile(os.path.join(uidir, u"icons/icon-import.png"), QSize(), QIcon.Normal, QIcon.On)
        self.actionImport.setIcon(icon1)
        font1 = QFont()
        font1.setPointSize(12)
        self.actionImport.setFont(font1)
        self.actionSave_As = QAction(MainWindow)
        self.actionSave_As.setObjectName(u"actionSave_As")
        icon2 = QIcon()
        icon2.addFile(os.path.join(uidir, u"icons/icon-saveas.png"), QSize(), QIcon.Normal, QIcon.On)
        self.actionSave_As.setIcon(icon2)
        self.actionSave_As.setFont(font1)
        self.actionView_Output = QAction(MainWindow)
        self.actionView_Output.setObjectName(u"actionView_Output")
        icon3 = QIcon()
        icon3.addFile(os.path.join(uidir, u"icons/icon-preview.png"), QSize(), QIcon.Normal, QIcon.On)
        self.actionView_Output.setIcon(icon3)
        self.actionView_Output.setFont(font1)
        self.actionUpdate = QAction(MainWindow)
        self.actionUpdate.setObjectName(u"actionUpdate")
        icon4 = QIcon()
        icon4.addFile(os.path.join(uidir, u"icons/icon-update.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionUpdate.setIcon(icon4)
        self.actionUpdate.setFont(font1)
        self.actionLicense = QAction(MainWindow)
        self.actionLicense.setObjectName(u"actionLicense")
        icon5 = QIcon()
        icon5.addFile(os.path.join(uidir, u"icons/icon-license.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionLicense.setIcon(icon5)
        self.actionLicense.setFont(font1)
        self.actionAbout = QAction(MainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        icon6 = QIcon()
        icon6.addFile(os.path.join(uidir, u"icons/icon-about.jpg"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionAbout.setIcon(icon6)
        self.actionAbout.setFont(font1)
        self.actionRepeat_Timer = QAction(MainWindow)
        self.actionRepeat_Timer.setObjectName(u"actionRepeat_Timer")
        icon7 = QIcon()
        icon7.addFile(os.path.join(uidir, u"icons/icon-config-timer.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionRepeat_Timer.setIcon(icon7)
        self.actionRepeat_Timer.setFont(font1)
        self.actionEmail_Notification = QAction(MainWindow)
        self.actionEmail_Notification.setObjectName(u"actionEmail_Notification")
        icon8 = QIcon()
        icon8.addFile(os.path.join(uidir, u"icons/icon-email-notification.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionEmail_Notification.setIcon(icon8)
        self.actionEmail_Notification.setFont(font1)
        self.actionProfit_Formula = QAction(MainWindow)
        self.actionProfit_Formula.setObjectName(u"actionProfit_Formula")
        icon9 = QIcon()
        icon9.addFile(os.path.join(uidir, u"icons/icon-formula.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionProfit_Formula.setIcon(icon9)
        self.actionProfit_Formula.setFont(font1)
        self.actionWeb_Browser_Driver = QAction(MainWindow)
        self.actionWeb_Browser_Driver.setObjectName(u"actionWeb_Browser_Driver")
        icon10 = QIcon()
        icon10.addFile(os.path.join(uidir, u"icons/icon-webdriver.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionWeb_Browser_Driver.setIcon(icon10)
        self.actionWeb_Browser_Driver.setFont(font1)
        self.actionResource = QAction(MainWindow)
        self.actionResource.setObjectName(u"actionResource")
        icon11 = QIcon()
        icon11.addFile(os.path.join(uidir, u"icons/icon-resource.png"), QSize(), QIcon.Normal, QIcon.Off)
        self.actionResource.setIcon(icon11)
        self.actionResource.setFont(font1)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.centralwidget.setFont(font)
        self.gridLayout_2 = QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.progressBar = QProgressBar(self.centralwidget)
        self.progressBar.setObjectName(u"progressBar")
        font2 = QFont()
        font2.setBold(True)
        font2.setItalic(True)
        self.progressBar.setFont(font2)
        self.progressBar.setValue(24)
        self.progressBar.setAlignment(Qt.AlignCenter)
        self.progressBar.setTextVisible(True)
        self.progressBar.setOrientation(Qt.Horizontal)

        self.gridLayout_2.addWidget(self.progressBar, 4, 2, 1, 2)

        self.plainTxtLog = QPlainTextEdit(self.centralwidget)
        self.plainTxtLog.setObjectName(u"plainTxtLog")
        self.plainTxtLog.setReadOnly(True)

        self.gridLayout_2.addWidget(self.plainTxtLog, 1, 3, 1, 1)

        self.labelDateTime = QLabel(self.centralwidget)
        self.labelDateTime.setObjectName(u"labelDateTime")
        font3 = QFont()
        font3.setPointSize(11)
        font3.setBold(True)
        self.labelDateTime.setFont(font3)
        self.labelDateTime.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)

        self.gridLayout_2.addWidget(self.labelDateTime, 0, 2, 1, 1)

        self.dateTimeEdit = QDateTimeEdit(self.centralwidget)
        self.dateTimeEdit.setObjectName(u"dateTimeEdit")
        font4 = QFont()
        font4.setPointSize(12)
        font4.setBold(False)
        self.dateTimeEdit.setFont(font4)
        self.dateTimeEdit.setAutoFillBackground(True)
        self.dateTimeEdit.setWrapping(False)
        self.dateTimeEdit.setFrame(True)
        self.dateTimeEdit.setReadOnly(True)
        self.dateTimeEdit.setButtonSymbols(QAbstractSpinBox.NoButtons)
        self.dateTimeEdit.setProperty("showGroupSeparator", False)

        self.gridLayout_2.addWidget(self.dateTimeEdit, 0, 3, 1, 1)

        self.btnStartStop = QPushButton(self.centralwidget)
        self.btnStartStop.setObjectName(u"btnStartStop")
        self.btnStartStop.setEnabled(True)
        sizePolicy = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnStartStop.sizePolicy().hasHeightForWidth())
        self.btnStartStop.setSizePolicy(sizePolicy)
        font5 = QFont()
        font5.setPointSize(14)
        font5.setBold(True)
        self.btnStartStop.setFont(font5)
        self.btnStartStop.setStyleSheet(u"")

        self.gridLayout_2.addWidget(self.btnStartStop, 2, 2, 2, 2)

        self.groupBox = QGroupBox(self.centralwidget)
        self.groupBox.setObjectName(u"groupBox")
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy1)
        font6 = QFont()
        font6.setPointSize(11)
        font6.setBold(True)
        font6.setItalic(False)
        font6.setUnderline(False)
        self.groupBox.setFont(font6)
        self.groupBox.setLayoutDirection(Qt.LeftToRight)
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.verticalLayout = QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName(u"verticalLayout")

        self.gridLayout_2.addWidget(self.groupBox, 1, 2, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 960, 27))
        self.menubar.setFont(font4)
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuSetting = QMenu(self.menubar)
        self.menuSetting.setObjectName(u"menuSetting")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        self.statusbar.setFont(font4)
        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSetting.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionView_Output)
        self.menuSetting.addAction(self.actionRepeat_Timer)
        self.menuSetting.addAction(self.actionEmail_Notification)
        self.menuSetting.addAction(self.actionProfit_Formula)
        self.menuSetting.addAction(self.actionWeb_Browser_Driver)
        self.menuSetting.addAction(self.actionResource)
        self.menuHelp.addAction(self.actionUpdate)
        self.menuHelp.addAction(self.actionLicense)
        self.menuHelp.addAction(self.actionAbout)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Market Collect", None))
        self.actionImport.setText(QCoreApplication.translate("MainWindow", u"Import", None))
#if QT_CONFIG(tooltip)
        self.actionImport.setToolTip(QCoreApplication.translate("MainWindow", u"Import product list file", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionImport.setStatusTip(QCoreApplication.translate("MainWindow", u"Import product list file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionImport.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_As.setText(QCoreApplication.translate("MainWindow", u"Save As...", None))
#if QT_CONFIG(tooltip)
        self.actionSave_As.setToolTip(QCoreApplication.translate("MainWindow", u"Save Completed Output File As", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionSave_As.setStatusTip(QCoreApplication.translate("MainWindow", u"Save Completed Output File As", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSave_As.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionView_Output.setText(QCoreApplication.translate("MainWindow", u"View Output", None))
#if QT_CONFIG(tooltip)
        self.actionView_Output.setToolTip(QCoreApplication.translate("MainWindow", u"View Output of completed File", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionView_Output.setStatusTip(QCoreApplication.translate("MainWindow", u"View Output of completed File", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionView_Output.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.actionUpdate.setText(QCoreApplication.translate("MainWindow", u"Update", None))
        self.actionLicense.setText(QCoreApplication.translate("MainWindow", u"License", None))
        self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
        self.actionRepeat_Timer.setText(QCoreApplication.translate("MainWindow", u"Repeat Timer", None))
#if QT_CONFIG(tooltip)
        self.actionRepeat_Timer.setToolTip(QCoreApplication.translate("MainWindow", u"Config timer for repeat operation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionRepeat_Timer.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+T", None))
#endif // QT_CONFIG(shortcut)
        self.actionEmail_Notification.setText(QCoreApplication.translate("MainWindow", u"Email Notification", None))
#if QT_CONFIG(tooltip)
        self.actionEmail_Notification.setToolTip(QCoreApplication.translate("MainWindow", u"Setup email list and notification condition", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionEmail_Notification.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+E", None))
#endif // QT_CONFIG(shortcut)
        self.actionProfit_Formula.setText(QCoreApplication.translate("MainWindow", u"Profit Formula", None))
#if QT_CONFIG(tooltip)
        self.actionProfit_Formula.setToolTip(QCoreApplication.translate("MainWindow", u"Set Profit Formula for Output File", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionProfit_Formula.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionWeb_Browser_Driver.setText(QCoreApplication.translate("MainWindow", u"Select Web Driver", None))
#if QT_CONFIG(shortcut)
        self.actionWeb_Browser_Driver.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+W", None))
#endif // QT_CONFIG(shortcut)
        self.actionResource.setText(QCoreApplication.translate("MainWindow", u"Config Tool Resource", None))
#if QT_CONFIG(tooltip)
        self.actionResource.setToolTip(QCoreApplication.translate("MainWindow", u"Config Tool Resource (i.e. number of thread/core used by tool)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionResource.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.labelDateTime.setText(QCoreApplication.translate("MainWindow", u"DATE TIME:", None))
        self.dateTimeEdit.setDisplayFormat(QCoreApplication.translate("MainWindow", u"dd/MM/yyyy hh:mm:ss", None))
        self.btnStartStop.setText(QCoreApplication.translate("MainWindow", u"START", None))
        self.groupBox.setTitle(QCoreApplication.translate("MainWindow", u"   TIMER  ", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuSetting.setTitle(QCoreApplication.translate("MainWindow", u"Setting", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
    # retranslateUi


